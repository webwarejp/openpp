security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        # in memory provider
        in_memory:
            memory:
                users:
                    user:  { password: "%in_memory.user.pass%",  roles: [ 'ROLE_USER' ] }
                    admin: { password: "%in_memory.admin.pass%", roles: [ 'ROLE_ADMIN' , 'ROLE_SUPER_ADMIN' ] }

        # FpOpenIdBundle
        openid_user_provider:
            id: acme.user.openid_user_manager # the name of the service

        # FOSUserBundle
        fos_user_provider:
            id: fos_user.user_provider.username

        #fos_facebook_provider:
        #      id: my.facebook.user
        # 
        # 連なったプロバイダ
        my_chain_provider:
            chain:
                providers: [ fos_user_provider, in_memory ] #, fos_facebook_provider ]     

    firewalls:
        admin:
            #pattern:          /admin/(.*)
            pattern:           /admin/(.*)
            form_login:
                provider:       fos_user_provider
                csrf_provider:  form.csrf_provider
                login_path:     admin_login
                check_path:     admin_login_check
                use_forward:    false
                always_use_default_target_path: false
                default_target_path:  acme_admin_homepage
                target_path_parameter:          _target_path
                failure_path:   null
                use_referer:    true
            logout:
                path:           admin_logout
                target:         admin_login
            anonymous:        true
            #context:          application
        # フロント側
        main:
            pattern: .*
            form_login:
                provider:      my_chain_provider
                csrf_provider: form.csrf_provider
            logout:       true
            anonymous:    true
            context:      application
            switch_user:  true

            #OpenID
            fp_openid:
                create_user_if_not_exists: true # so createUserFromIdentity method will be called
                provider: openid_user_provider # cf below
                # previously we used 'contact/email' field. So we have to request it!
                # Please note that all OpenID providers may not be able to provide all fields.
                # check the desired provider documentation
                required_attributes:
                    - contact/email 

            # FOSFacebookBundle
            #fos_facebook:
            #     app_url: "http://apps.facebook.com/appName/"
            #     server_url: "http://localhost/facebookApp/"
            #     login_path: /login
            #     check_path: /login_check
            #     default_target_path: /
            #     provider: fos_facebook_provider

    access_control:
        - { path: ^/$, role: IS_AUTHENTICATED_ANONYMOUSLY } 
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login_openid$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/mypage/, role: ROLE_USER }
        - { path: ^/facebook/, role: ROLE_FACEBOOK }
        - { path: ^/secured_area, role: IS_AUTHENTICATED_OPENID }
